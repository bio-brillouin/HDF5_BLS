{
    "name": "Brillouin treatment",
    "version": "0.0",
    "author": "None",
    "description": "A blank algorithm for treating BLS spectra.",
    "functions": [
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": null,
                "window_width": null,
                "type_pnt": null
            },
            "description": "Adds a single point to the list of points together with a window to the list of windows with its type. Each point is an intensity extremum obtained by fitting a quadratic polynomial to the windowed data.\nThe point is given as a value on the frequency axis (not a position on this axis).\nThe \"position_center_window\" parameter is the center of the window surrounding the peak. The \"window_width\" parameter is the width of the window surrounding the peak (full width). The \"type_pnt\" parameter is the type of the peak. It can be either \"Stokes\", \"Anti-Stokes\", \"Elastic\" or \"Other\"."
        },
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": null,
                "window_width": null,
                "type_pnt": null
            },
            "description": "See previous run"
        },
        {
            "function": "normalize_data",
            "parameters": {
                "threshold_noise": null
            },
            "description": "Normalizes the data by identifying the regions corresponding to noise, substracting the average of these regions from the data, and dividing by the average of the amplitude of all peaks that are not of type elastic."
        },
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": null,
                "window_width": null,
                "type_pnt": null
            },
            "description": "See previous run"
        },
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": null,
                "window_width": null,
                "type_pnt": null
            },
            "description": "See previous run"
        },
        {
            "function": "define_model",
            "parameters": {
                "model": null,
                "elastic_correction": null
            },
            "description": "Defines the model to be used to fit the data."
        },
        {
            "function": "estimate_width_inelastic_peaks",
            "parameters": {
                "max_width_guess": null
            },
            "description": "Estimates the full width at half maximum of the inelastic peaks stored in self.points. Note that the data is supposed to have a zero offset. The estimation is done by finding the samples of the data closes to half of the peak height."
        },
        {
            "function": "multi_fit_all_inelastic",
            "parameters": {
                "default_width": null,
                "guess_offset": null,
                "update_point_position": null,
                "bound_shift": [],
                "bound_linewidth": []
            },
            "description": "Fits all inelastically scattered peak as a single curve. The linewidth of the individual peaks can be estimated beforehand using the function estimate_width_inelastic_peaks. If not estimated, a fixed width is used (default_width). The offset can also be guessed or not (guess_offset). In the case the offset is guessed, the minimum of the data on the window defined as the combination of all the peaks windoes is used as an initial guess. \nWhen applying the fit to data acquired successively, it might be interesting to update the initial position of the peak by selecting the last fitted position. This can be done by setting update_point_position to True."
        }
    ]
}