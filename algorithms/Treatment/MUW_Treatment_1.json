{
    "name": "Brillouin treatment",
    "version": "0.0",
    "author": "None",
    "description": "A blank algorithm for treating BLS spectra.",
    "functions": [
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": -5.8,
                "window_width": 1.5,
                "type_pnt": "Other"
            },
            "description": "Adds a single point to the list of points together with a window to the list of windows with its type. Each point is an intensity extremum obtained by fitting a quadratic polynomial to the windowed data.\nThe point is given as a value on the frequency axis (not a position on this axis).\nThe \"position_center_window\" parameter is the center of the window surrounding the peak. The \"window_width\" parameter is the width of the window surrounding the peak (full width). The \"type_pnt\" parameter is the type of the peak. It can be either \"Stokes\", \"Anti-Stokes\", \"Elastic\" or \"Other\"."
        },
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": 5.8,
                "window_width": 1.5,
                "type_pnt": "Other"
            },
            "description": "See previous run"
        },
        {
            "function": "normalize_data",
            "parameters": {
                "threshold_noise": 0.05
            },
            "description": "Normalizes the data by identifying the regions corresponding to noise, substracting the average of these regions from the data, and dividing by the average of the amplitude of all peaks that are not of type elastic."
        },
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": -6.3,
                "window_width": 3,
                "type_pnt": "Stokes"
            },
            "description": "See previous run"
        },
        {
            "function": "add_point",
            "parameters": {
                "position_center_window": 6.5,
                "window_width": 3,
                "type_pnt": "Anti-Stokes"
            },
            "description": "See previous run"
        },
        {
            "function": "define_model",
            "parameters": {
                "model": "Lorentzian",
                "elastic_correction": true
            },
            "description": "Defines the model to be used to fit the data."
        },
        {
            "function": "estimate_width_inelastic_peaks",
            "parameters": {
                "max_width_guess": 2
            },
            "description": "Estimates the full width at half maximum of the inelastic peaks stored in self.points. Note that the data is supposed to be normalized."
        },
        {
            "function": "fit_all_inelastic_of_curve",
            "parameters": {
                "default_width": 1,
                "guess_offset": true,
                "update_point_position": true,
                "bound_shift": [
                    5,
                    7.5
                ],
                "bound_linewidth": null
            },
            "description": "Fits a lineshape to the data using the points stored as Stokes or Anti-Stokes peaks in the points attribute. The linewidth can be estimated beforehand using the function estimate_width_inelastic_peaks. If not estimated, a fixed width is used (default_width). The offset can also be guessed or not (guess_offset). In the case the offset is guessed, the minimum of the data on the selected window is used as an initial guess. The position of the peak can also be updated based on the fitted shift if update_point_position is set to True. If set to False, the positions are not updated."
        },
        {
            "function": "apply_algorithm_on_all",
            "parameters": {
                "amplitude_weight_of_shift_and_linewidth": false,
                "keep_max_amplitude": true
            },
            "description": "Takes all the steps of the algorithm up to the moment this function is called and applies the steps to each individual spectrum in the dataset. \nThis function updates the global attributes of the class concerning the shift, the linewidth and the amplitude together with their variance, taking into account error propagation. \nIf a spectrum could not be fitted, its value is set to 0 in the global attributes.\nAll the points where the spectra could not be fitted are marked with the \"fit_error_marker\" parameter in the global attributes (shift, linewidth, amplitude, shift_var, linewidth_var, amplitude_var) and their coordinates are stored in the \"point_error\" list. The \"point_error_type\" attribute is also updated with the type of error returned by the fit function (see scipy.optimize.curve_fit documentation). The function returns the number of spectra that could not be fitted."
        },
        {
            "function": "mark_errors_shift",
            "parameters": {
                "min_shift": 5.7,
                "max_shift": 6.5
            },
            "description": "Marks the points that present a value of shift above or below given thresholds."
        },
        {
            "function": "mark_errors_std_shift",
            "parameters": {
                "max_error_shift_variance": 0.05
            },
            "description": "Marks the points that present a variance of the shift greater than a certain threshold."
        },
        {
            "function": "mark_errors_linewidth",
            "parameters": {
                "min_linewidth": 0,
                "max_linewidth": 3
            },
            "description": "Marks the points that present a value of linewidth above or below given thresholds."
        },
        {
            "function": "mark_errors_std_linewidth",
            "parameters": {
                "max_error_linewidth_variance": 0.2
            },
            "description": "Marks the points that present a variance of the linewidth greater than a certain threshold."
        },
        {
            "function": "adjust_treatment_on_errors",
            "parameters": {
                "position": null,
                "new_parameters": [
                    null,
                    false,
                    null,
                    {
                        "position_center_window": -7,
                        "type_pnt": "Stokes",
                        "window_width": 4
                    },
                    {
                        "position_center_window": 7,
                        "type_pnt": "Anti-Stokes",
                        "window_width": 4
                    },
                    null,
                    null,
                    null
                ]
            },
            "description": "Reapplies the treatment on the point error located at the position \"position\" with the new parameters \"new_parameters\"."
        },
        {
            "function": "adjust_treatment_on_errors",
            "parameters": {
                "position": null,
                "new_parameters": [
                    null,
                    false,
                    null,
                    {
                        "position_center_window": -6.3,
                        "type_pnt": "Stokes",
                        "window_width": 3
                    },
                    {
                        "position_center_window": 6.5,
                        "type_pnt": "Anti-Stokes",
                        "window_width": 3
                    },
                    null,
                    null,
                    null
                ]
            },
            "description": "See previous run"
        }
    ]
}